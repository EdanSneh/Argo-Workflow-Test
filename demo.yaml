apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: my-argo-workflow-
spec:
  entrypoint: main-dag
  templates:
  - name: main-dag
    inputs:
      parameters:
      - name: IMAGE-URL
        default: "https://i.imgur.com/QUS0pCI.jpg"
      artifacts:
      - name: CODE
        git: 
          repo: https://github.com/EliZucker/Argo-Workflow-Test.git
    dag:
      tasks:
      - name: DOWNLOAD-IMAGE
        template: download-image
        arguments:
          parameters:
          - name: IMAGE-URL
            value: "{{inputs.parameters.IMAGE-URL}}"

      - name: LOCATE-FACES
        dependencies: [DOWNLOAD-IMAGE]
        template: locate-faces
        arguments:
          artifacts:
          - name: RAW-IMAGE
            from: "{{tasks.DOWNLOAD-IMAGE.outputs.artifacts.IMAGE}}"
          - name: "CODE"
            from: "{{inputs.artifacts.CODE}}"

      - name: CROP-FACES
        dependencies: [LOCATE-FACES]
        template: crop-faces
        arguments:
          artifacts:
          - name: RAW-IMAGE
            from: "{{tasks.DOWNLOAD-IMAGE.outputs.artifacts.IMAGE}}"
          parameters:
          - name: imagemagick-commands
            value: "{{tasks.LOCATE-FACES.outputs.parameters.imagemagick-commands}}"

  - name: download-image
    inputs:
      parameters:
      - name: IMAGE-URL
    container:
      image: sequenceiq/alpine-curl
      command: ["sh", "-c"]
      args: ["curl {{inputs.parameters.IMAGE-URL}} > /rawimage.jpg"]
    outputs:
      artifacts:
      - name: IMAGE
        path: /rawimage.jpg

  - name: locate-faces
    inputs:
      artifacts:
      - name: RAW-IMAGE
        path: /src/rawimage.jpg
      - name: CODE
        path: /src
    container:
      image: victorhcm/opencv
      command: ["bash", "-c"]
      args: [python /src/faceeyedetect.py]
    outputs:
      parameters:
      - name: imagemagick-commands
        valueFrom:
          path: /src/imagemagick_commands.json

  - name: crop-faces
    inputs:
      parameters:
      - name: imagemagick-commands
      artifacts:
      - name: RAW-IMAGE
    steps:
    - - name: CROP-FACE
        template: crop-face
        arguments:
          artifacts:
          #Will this line actually work to send the image as an argument?
          - name: RAW-IMAGE
            from: "{{inputs.artifacts.RAW-IMAGE}}"
          parameters:
          - name: imagemagick-command
            value: "{{item}}"
        withParam: "{{inputs.parameters.imagemagick-commands}}"
    - - name: ISFACE
        template: isKnownFace
        arguments:
          artifacts:
            - name: cropImage
              from: "{{steps.RAW-IMAGE.outputs.artifacts.CROPPED-FACE}}"
    - - name: CONDITION
        template: condition
        when: "{{steps.ISFACE.outputs.result}}"


  - name: crop-face
    inputs:
      artifacts:
      - name: RAW-IMAGE
        path: /data/rawimage.jpg
      parameters:
      - name: imagemagick-command
    container:
      image: acleancoder/imagemagick-full
      command: ["bash", "-c"]
      args: ["{{inputs.parameters.imagemagick-command}}"]
    outputs:
      artifacts:
      - name: CROPPED-FACE
        path: /tmp/cropped_face.jpg
   
  - name: isKnownFace
    inputs:
      artifacts:
      - name: cropImage
        path: /tmp/image.jpg
    container:
      image: python:2.7.15-alpine3.7
      command: ["bash", "-c"]
      args: [python /src/faceeyedetect.py]

  - name: condition
    container:
      image: nginx


  

    
