apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: my-argo-workflow-
spec:
  entrypoint: main-dag
  templates:
  - name: main-dag
    inputs:
      parameters:
      - name: IMAGE
        default: "https://i.imgur.com/QUS0pCI.jpg"
      artifacts:
      - name: CODE
        git: 
          repo: https://github.com/EliZucker/Argo-Workflow-Test.git
    dag:
      tasks:
      - name: DOWNLOAD
        template: download-image
        arguments:
          parameters:
          - name: IMAGE-URL
            value: "{{inputs.parameters.IMAGE}}"
      - name: LOCATE-FACES
        dependencies: [DOWNLOAD]
        template: locate-faces
        arguments:
          artifacts:
          - name: RAW-IMAGE
            from: "{{tasks.DOWNLOAD.outputs.artifacts.IMAGE}}"
          - name: "CODE"
            from: "{{inputs.artifacts.CODE}}"

      - name: CROP-FACES
        dependencies: [LOCATE-FACES]
        template: crop-faces
        arguments:
          artifacts:
          - name: RAW-IMAGE
            from: "{{tasks.DOWNLOAD.outputs.artifacts.IMAGE}}"
          #parameters need to be updated to take imagemagick command
          parameters:
          - name: imagemagick-command
            value: "{{item}}"
        withParam: "{{tasks.LOCATE-FACES.outputs.parameters.imagemagick-commands-file}}" 

  - name: download-image
    inputs:
      parameters:
      - name: IMAGE-URL
    container:
      image: sequenceiq/alpine-curl
      command: ["sh", "-c"]
      args: ["curl {{inputs.parameters.IMAGE-URL}} > /tmp/rawimage.jpg"]
    outputs:
      artifacts:
      - name: IMAGE
        path: /tmp/rawimage.jpg
  - name: locate-faces
    inputs:
      artifacts:
      - name: downloaded-image
        path: /rawimage.jpg
      - name: CODE
        path: /src
    container:
      image: python:alpine3.6
      command: ["bash", "-c"]
      args: [python /src/faceeyedetect.py]
    outputs:
      parameters:
      - name: imagemagick-commands-file
        valueFrom:
          path: /imagemagick_commands.txt

  - name: crop-faces
    inputs:
      parameters:
        name: imagemagick-command
      artifacts:
      - name: downloaded-image
        path: /rawimage.jpg
    steps:
    - - name: CROP-FACE
        template: crop-face
        arguments:
          artifacts:
          #Will this line actually work to send the image as an argument?
          - name: RAW-IMAGE
            from: "{{tasks.DOWNLOAD.outputs.artifacts.IMAGE}}"
          parameters:
          - name: imagemagick-command
            value: "{{item}}"
        withParam: "{{inputs.parameters.imagemagick-command}}"

  - name: crop-face
    inputs:
      parameters:
      - name: imagemagick-command
      artifacts:
      - name: downloaded-image
        path: /rawimage.jpg
    script:
      image: python:alpine3.6
      command: ["bash", "-c"]
      args: ["{{inputs.parameters.imagemagick-command}}"]
    outputs:
      artifacts:
      - name: CROPPED-FACE
        path: /tmp/cropped_face.jpg
   





  

    
